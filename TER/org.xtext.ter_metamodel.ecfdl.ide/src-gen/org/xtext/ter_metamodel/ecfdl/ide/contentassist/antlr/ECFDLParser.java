/*
 * generated by Xtext 2.10.0
 */
package org.xtext.ter_metamodel.ecfdl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtext.ter_metamodel.ecfdl.ide.contentassist.antlr.internal.InternalECFDLParser;
import org.xtext.ter_metamodel.ecfdl.services.ECFDLGrammarAccess;

public class ECFDLParser extends AbstractContentAssistParser {

	@Inject
	private ECFDLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalECFDLParser createParser() {
		InternalECFDLParser result = new InternalECFDLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getFileAccess().getGroup(), "rule__File__Group__0");
					put(grammarAccess.getFileAccess().getGroup_3(), "rule__File__Group_3__0");
					put(grammarAccess.getEcfdAccess().getGroup(), "rule__Ecfd__Group__0");
					put(grammarAccess.getEcfdAccess().getGroup_5(), "rule__Ecfd__Group_5__0");
					put(grammarAccess.getEcfdAccess().getGroup_5_3(), "rule__Ecfd__Group_5_3__0");
					put(grammarAccess.getEcfdAccess().getGroup_6(), "rule__Ecfd__Group_6__0");
					put(grammarAccess.getEcfdAccess().getGroup_6_3(), "rule__Ecfd__Group_6_3__0");
					put(grammarAccess.getEcfdAccess().getGroup_7(), "rule__Ecfd__Group_7__0");
					put(grammarAccess.getEcfdAccess().getGroup_7_2(), "rule__Ecfd__Group_7_2__0");
					put(grammarAccess.getEcfdAccess().getGroup_7_2_1(), "rule__Ecfd__Group_7_2_1__0");
					put(grammarAccess.getMutexAccess().getGroup(), "rule__Mutex__Group__0");
					put(grammarAccess.getMutexAccess().getGroup_7(), "rule__Mutex__Group_7__0");
					put(grammarAccess.getBoxAccess().getGroup(), "rule__Box__Group__0");
					put(grammarAccess.getBoxAccess().getGroup_6(), "rule__Box__Group_6__0");
					put(grammarAccess.getBoxAccess().getGroup_6_3(), "rule__Box__Group_6_3__0");
					put(grammarAccess.getBoxAccess().getGroup_7(), "rule__Box__Group_7__0");
					put(grammarAccess.getBoxAccess().getGroup_7_3(), "rule__Box__Group_7_3__0");
					put(grammarAccess.getBoxAccess().getGroup_8(), "rule__Box__Group_8__0");
					put(grammarAccess.getBoxAccess().getGroup_8_3(), "rule__Box__Group_8_3__0");
					put(grammarAccess.getBoxAccess().getGroup_9(), "rule__Box__Group_9__0");
					put(grammarAccess.getBoxAccess().getGroup_9_3(), "rule__Box__Group_9_3__0");
					put(grammarAccess.getBoxAccess().getGroup_10(), "rule__Box__Group_10__0");
					put(grammarAccess.getBoxAccess().getGroup_10_3(), "rule__Box__Group_10_3__0");
					put(grammarAccess.getBoxAccess().getGroup_11(), "rule__Box__Group_11__0");
					put(grammarAccess.getBoxAccess().getGroup_11_3(), "rule__Box__Group_11_3__0");
					put(grammarAccess.getGroupBoxAccess().getGroup(), "rule__GroupBox__Group__0");
					put(grammarAccess.getGroupBoxAccess().getGroup_12(), "rule__GroupBox__Group_12__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getFileAccess().getEcfdAssignment_2(), "rule__File__EcfdAssignment_2");
					put(grammarAccess.getFileAccess().getEcfdAssignment_3_1(), "rule__File__EcfdAssignment_3_1");
					put(grammarAccess.getEcfdAccess().getNameAssignment_3(), "rule__Ecfd__NameAssignment_3");
					put(grammarAccess.getEcfdAccess().getBoxesAssignment_5_2(), "rule__Ecfd__BoxesAssignment_5_2");
					put(grammarAccess.getEcfdAccess().getBoxesAssignment_5_3_1(), "rule__Ecfd__BoxesAssignment_5_3_1");
					put(grammarAccess.getEcfdAccess().getGroupsAssignment_6_2(), "rule__Ecfd__GroupsAssignment_6_2");
					put(grammarAccess.getEcfdAccess().getBoxesAssignment_6_3_1(), "rule__Ecfd__BoxesAssignment_6_3_1");
					put(grammarAccess.getEcfdAccess().getMutexAssignment_7_2_0(), "rule__Ecfd__MutexAssignment_7_2_0");
					put(grammarAccess.getEcfdAccess().getMutexAssignment_7_2_1_1(), "rule__Ecfd__MutexAssignment_7_2_1_1");
					put(grammarAccess.getMutexAccess().getNameAssignment_2(), "rule__Mutex__NameAssignment_2");
					put(grammarAccess.getMutexAccess().getBoxAssignment_6(), "rule__Mutex__BoxAssignment_6");
					put(grammarAccess.getMutexAccess().getBoxAssignment_7_1(), "rule__Mutex__BoxAssignment_7_1");
					put(grammarAccess.getBoxAccess().getNameAssignment_3(), "rule__Box__NameAssignment_3");
					put(grammarAccess.getBoxAccess().getRootAssignment_5(), "rule__Box__RootAssignment_5");
					put(grammarAccess.getBoxAccess().getSuperBoxAssignment_6_2(), "rule__Box__SuperBoxAssignment_6_2");
					put(grammarAccess.getBoxAccess().getSuperBoxAssignment_6_3_1(), "rule__Box__SuperBoxAssignment_6_3_1");
					put(grammarAccess.getBoxAccess().getGroupboxAssignment_7_2(), "rule__Box__GroupboxAssignment_7_2");
					put(grammarAccess.getBoxAccess().getGroupboxAssignment_7_3_1(), "rule__Box__GroupboxAssignment_7_3_1");
					put(grammarAccess.getBoxAccess().getChildBoxAssignment_8_2(), "rule__Box__ChildBoxAssignment_8_2");
					put(grammarAccess.getBoxAccess().getChildBoxAssignment_8_3_1(), "rule__Box__ChildBoxAssignment_8_3_1");
					put(grammarAccess.getBoxAccess().getChildGroupAssignment_9_2(), "rule__Box__ChildGroupAssignment_9_2");
					put(grammarAccess.getBoxAccess().getChildGroupAssignment_9_3_1(), "rule__Box__ChildGroupAssignment_9_3_1");
					put(grammarAccess.getBoxAccess().getMutexAssignment_10_2(), "rule__Box__MutexAssignment_10_2");
					put(grammarAccess.getBoxAccess().getMutexAssignment_10_3_1(), "rule__Box__MutexAssignment_10_3_1");
					put(grammarAccess.getBoxAccess().getFeatureAssignment_11_2(), "rule__Box__FeatureAssignment_11_2");
					put(grammarAccess.getBoxAccess().getFeatureAssignment_11_3_1(), "rule__Box__FeatureAssignment_11_3_1");
					put(grammarAccess.getGroupBoxAccess().getNameAssignment_2(), "rule__GroupBox__NameAssignment_2");
					put(grammarAccess.getGroupBoxAccess().getExclusifAssignment_4(), "rule__GroupBox__ExclusifAssignment_4");
					put(grammarAccess.getGroupBoxAccess().getSuperBoxAssignment_7(), "rule__GroupBox__SuperBoxAssignment_7");
					put(grammarAccess.getGroupBoxAccess().getBoxAssignment_11(), "rule__GroupBox__BoxAssignment_11");
					put(grammarAccess.getGroupBoxAccess().getBoxAssignment_12_1(), "rule__GroupBox__BoxAssignment_12_1");
					put(grammarAccess.getFeatureAccess().getNameAssignment_1(), "rule__Feature__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalECFDLParser typedParser = (InternalECFDLParser) parser;
			typedParser.entryRuleFile();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ECFDLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ECFDLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
