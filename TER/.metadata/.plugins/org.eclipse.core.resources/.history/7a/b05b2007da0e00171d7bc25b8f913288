// automatically generated by Xtext
grammar org.xtext.ter_metamodel.ecfdl.ECFDL with org.eclipse.xtext.common.Terminals

import "http://www.example.org/ter_metamodel" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

File returns File:
	{File}
	'File'
	'{'
		('ecfd' '{' ecfd+=Ecfd ( "," ecfd+=Ecfd)* '}' )?
	'}';


Element returns Element:
	Box | GroupBox;





Ecfd returns Ecfd:
	{Ecfd}
	'Ecfd'
	'{'
		('element' '{' element+=Element ( "," element+=Element)* '}' )?
		('mutex' '{' mutex+=Mutex ( "," mutex+=Mutex)* '}' )?
	'}';

Mutex returns Mutex:
	'Mutex'
	'{'
		'box' '(' box+=[Box|EString] ( "," box+=[Box|EString])* ')' 
	'}';

Box returns Box:
	{Box}
	'Box'
	'{'
		('superBox' '(' superBox+=[Box|EString] ( "," superBox+=[Box|EString])* ')' )?
		('groupbox' '(' groupbox+=[GroupBox|EString] ( "," groupbox+=[GroupBox|EString])* ')' )?
		('mutex' '(' mutex+=[Mutex|EString] ( "," mutex+=[Mutex|EString])* ')' )?
		('feature' '{' feature+=Feature ( "," feature+=Feature)* '}' )?
	'}';

GroupBox returns GroupBox:
	(Exclusion?='Exclusion')?
	'GroupBox'
	'{'
		('superBox' '(' superBox+=[Box|EString] ( "," superBox+=[Box|EString])* ')' )?
		'box' '(' box+=[Box|EString] ( "," box+=[Box|EString])* ')' 
	'}';

Feature returns Feature:
	{Feature}
	'Feature'
	'{'
		('Name' Name=EString)?
	'}';

EString returns ecore::EString:
	STRING | ID;

EBoolean returns ecore::EBoolean:
	'true' | 'false';
